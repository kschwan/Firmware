#!nsh
#
# PX4FMU startup script for singlerotor helicopter testing.
#
# Kim Lindberg Schwaner <kim.schwaner@gmail.com>
#

# Start uORB
uorb start

# Start CDC/ACM serial driver
if sercon
then
	echo "[init] USB interface connected"
	nshterm /dev/ttyACM0 &
fi

# Try to mount the microSD card.
echo "[init] Mounting microSD card..."
if mount -t vfat /dev/mmcsd0 /fs/microsd
then
	echo "[init] Mounted succesfully at /fs/microsd"
	# Start playing the startup tune
	tone_alarm start
else
	echo "[init] No microSD card found"
	# Play SOS
	tone_alarm error
fi

# Load parameters
set PARAM_FILE /fs/microsd/params
if mtd start
then
	set PARAM_FILE /fs/mtd_params
fi

param select $PARAM_FILE
if param load
then
	echo "[init] Params loaded: $PARAM_FILE"
else
	echo "[init] ERROR: Params loading failed: $PARAM_FILE"
fi

# Start system state indicator
if rgbled start
then
	echo "[init] Using external RGB Led"
else
	if blinkm start
	then
		echo "[init] Using blinkm"
		blinkm systemstate
	fi
fi

# Find IO board firmware
if [ -f /etc/extras/px4io-v2_default.bin ]
then
	set io_file /etc/extras/px4io-v2_default.bin
else
	set io_file /etc/extras/px4io-v1_default.bin
fi

# Start PX4IO
if px4io start
then
	px4io recovery

	if hw_ver compare PX4FMU_V1
	then
		set PX4IO_LIMIT 200
	else
		set PX4IO_LIMIT 400
	fi

	px4io limit $PX4IO_LIMIT

	echo "[init] PX4IO OK"
fi

# Compare against new IO firmware
if px4io checkcrc $io_file
then
	echo "[init] PX4IO firmware CRC check OK"
else
	echo "[init] PX4IO firmware CRC check failure"
	tone_alarm MBABGP
	if px4io forceupdate 14662 $io_file
	then
		usleep 500000
		if px4io start
		then
			echo "[init] PX4IO restart OK"
			tone_alarm MSPAA
		else
			echo "[init] PX4IO restart failed"
			tone_alarm MNGGG
			sleep 5
			reboot
		fi
	else
		echo "[init] PX4IO firmware update failed"
		tone_alarm MNGGG
	fi
fi

# Load mixer
mixer load /dev/pwm_output /etc/mixers/IO_pass.mix

# MAV_TYPE value 4 is MAV_TYPE_HELICOPTER; a "Normal helicopter with tail rotor."
param set MAV_TYPE 4

# PWM
set PWM_OUTPUTS 12345
pwm rate -a -r 200
pwm disarmed -c $PWM_OUTPUTS -p 0
pwm min -c $PWM_OUTPUTS -p 1000
pwm max -c $PWM_OUTPUTS -p 2000

# Start the Commander
commander start

# Start MAVLink
mavlink start -d /dev/ttyS1

# Start the datamanager
dataman start

# Start the navigator
navigator start

# Start logging
sh /etc/init.d/rc.logging

# Start sensors
sh /etc/init.d/rc.sensors

# Start GPS
gps start

# Estimators
attitude_estimator_ekf start
position_estimator_inav start

# Start singlerotor controller apps
sr_att_control --start
